{"version":3,"file":"static/webpack/static/development/pages/_app.js.69fc15cbc891da9866c0.hot-update.js","sources":["webpack:///./components/Cart.js"],"sourcesContent":["import React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { adopt } from 'react-adopt';\nimport User from './User';\nimport CartStyles from './styles/CartStyles';\nimport Supreme from './styles/Supreme';\nimport CloseButton from './styles/CloseButton';\nimport SickButton from './styles/SickButton';\nimport CartItem from './CartItem';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport formatMoney from '../lib/formatMoney';\nimport Payment from './Payment';\n\nconst LOCAL_STATE_QUERY = gql`\n  query {\n    cartOpen @client\n    # //this is client side data, don't go to server for this data, grab it directly from the apollo store\n  }\n`;\n\nconst TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`;\n\nconst CLOSE_CART_MUTATION = gql`\n  mutation {\n    closeCart @client\n  }\n`;\n\nconst Composed = adopt({\n  user: ({ render }) => <User>{render}</User>, //arrow function gets rid of console warnings, otherwise <User /> works just fine.\n  closeCart: ({ render }) => (\n    <Mutation mutation={CLOSE_CART_MUTATION}>{render}</Mutation>\n  ),\n  // toggleCart: ({ render }) => (\n  //   <Mutation mutation={TOGGLE_CART_MUTATION}>{render}</Mutation>\n  // ),\n  localState: ({ render }) => <Query query={LOCAL_STATE_QUERY}>{render}</Query>,\n});\n\nconst pStyle = {\n  background: 'red',\n  textAlign: 'center',\n  color: 'white',\n  cursor: 'pointer',\n  fontSize: 24,\n};\n\nconst Cart = () => (\n  <Composed onMouseLeave={closeCart}>\n    {({ user, closeCart, localState }) => {\n      const me = user.data.me;\n      if (!me) return null; //we don't want to show the cart unless person is logged in\n\n      return (\n        <CartStyles open={localState.data.cartOpen}>\n          {/* ^^ open value live as boolean in Apollo store that can be toggled between true and false. Whenever that is \n      changed anywhere on our page, this will trigger and apply css  */}\n          <header>\n            <CloseButton onClick={closeCart} title='close'>\n              &times;\n            </CloseButton>\n            <Supreme>{me.name}'s Cart</Supreme>\n            <p>\n              You Have {me.cart.length} Item\n              {me.cart.length > 1 ? 's' : ''} in Your Cart\n            </p>\n          </header>\n          <ul>\n            {me.cart.map(cartItem => (\n              <CartItem key={cartItem.id} cartItem={cartItem} />\n            ))}\n          </ul>\n          <footer>\n            <p>Subtotal:</p>\n            <p>{formatMoney(calcTotalPrice(me.cart))}</p>\n            {me.cart.length ? ( //if cart is true, then render the checkout button\n              <Payment>\n                <SickButton>Checkout</SickButton>\n              </Payment>\n            ) : (\n              <p style={pStyle}>No Item to Checkout</p>\n            )}\n          </footer>\n        </CartStyles>\n      );\n    }}\n  </Composed>\n);\n\nexport default Cart;\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION, CLOSE_CART_MUTATION };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAMA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAtCA;AACA;AAyCA;;;;;A","sourceRoot":""}